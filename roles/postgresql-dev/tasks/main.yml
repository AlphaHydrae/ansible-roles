- name: Install PostgreSQL
  macports: name={{ postgresql_port_version }} state=installed
- name: Install PostgreSQL documentation
  macports: name={{ postgresql_port_version }}-doc state=installed
- name: Install PostgreSQL server
  macports: name={{ postgresql_port_version }}-server state=installed
- name: Select PostgreSQL port
  script: common/port-select.sh postgresql {{ postgresql_port_version }}
  register: selected
  changed_when: selected.stdout.find('already active') == -1
- name: Create PostgreSQL cluster directory
  file: path=/opt/local/var/db/{{ postgresql_port_version }}/defaultdb group=postgres owner=postgres mode=0700 state=directory
- name: Initialize PostgreSQL cluster
  command: su -l postgres -c '/opt/local/lib/{{ postgresql_port_version }}/bin/initdb -D /opt/local/var/db/{{ postgresql_port_version }}/defaultdb -E UTF8 --locale=en_US.UTF-8' creates=/opt/local/var/db/{{ postgresql_port_version }}/defaultdb/pg_hba.conf
- name: Load PostgreSQL port
  script: common/port-load.sh {{ postgresql_port_version }}-server
  register: loaded
  changed_when: loaded.stdout.find('already loaded') == -1
- name: Install psycopg2
  script: common/pip-install.sh psycopg2
  register: installed
  changed_when: installed.stdout.find('already installed') == -1
  environment:
    PATH: /opt/local/bin:{{ ansible_env.PATH }}
- name: Check if PostgreSQL user exists
  command: psql postgres -Upostgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{ user }}'"
  register: user_exists
  changed_when: user_exists.stdout.find('1') == -1
  environment:
    PATH: /opt/local/bin:{{ ansible_env.PATH }}
- name: Create PostgreSQL user
  command: createuser -Upostgres -l {{ user }}
  when: user_exists|changed
  environment:
    PATH: /opt/local/bin:{{ ansible_env.PATH }}
# FIXME: postgresql_user module bugged? https://github.com/ansible/ansible/issues/6989
#- name: Create PostgreSQL user
#  postgresql_user: name={{ user }} password="" state=present
#  environment:
#    PATH: /opt/local/bin:{{ ansible_env.PATH }}
